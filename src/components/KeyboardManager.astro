---
import { getI18n } from '@/i18n/'

const { currentLocale } = Astro
const i18n = getI18n({ currentLocale })

const { PAGE_INFO, basics } = i18n

const SOCIA_ICONS: Record<string, string> = {
  GitHub: `<svg
    width="16"
    height="16"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    style="margin-right: 8px"
    ><path
      fill="currentColor"
      d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
    ></path></svg
  >`,
  LinkedIn: `<svg
    height="16"
    width="16"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    style="margin-right: 8px"
    ><title>LinkedIn</title><path
      fill="currentColor"
      d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
    ></path></svg
  >`,
}

const profilesInfo = basics.profiles.map(({ network, url }) => {
  const icon = SOCIA_ICONS[network]
  const firstLetter = network[0].toUpperCase()

  return {
    id: network,
    section: 'Social',
    title: network,
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
    handler: () => window.open(url, '_blank'),
  }
})
---

<footer id='normal-footer' class='no-print'>
  <h4 set:html={PAGE_INFO.FOOTER} />
</footer>
<footer id='footer-button' class='no-print'>
  <svg
    xmlns='http://www.w3.org/2000/svg'
    class='icon icon-tabler icon-tabler-command'
    width='32'
    height='32'
    viewBox='0 0 24 24'
    stroke-width='1.5'
    stroke='#777'
    fill='none'
    stroke-linecap='round'
    stroke-linejoin='round'
  >
    <path stroke='none' d='M0 0h24v24H0z' fill='none'></path>
    <path d='M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10'></path>
  </svg>
</footer>
<ninja-keys id='ninjaKeys' data-info={JSON.stringify(profilesInfo)} placeholder='Search' hideBreadcrumbs></ninja-keys>
<script>
  import 'ninja-keys'

  interface Info {
    id: string
    section: string
    title: string
    url: string
    icon: string
    hotkey: string
  }

  const ninja = document.querySelector('ninja-keys')
  const footerButton = document.getElementById('footer-button')

  footerButton?.addEventListener('click', () => {
    var event = new KeyboardEvent('keydown', {
      key: 'K',
      code: 'KeyK',
      keyCode: 75,
      which: 75,
      ctrlKey: true,
      altKey: false,
      shiftKey: false,
      metaKey: false,
    })

    document.dispatchEvent(event)
  })

  if (ninja !== null) {
    const info = ninja.getAttribute('data-info') ?? '[]'
    const parsedInfo = JSON.parse(info)

    const data = parsedInfo.map(({ url, hotkey, icon, id, section, title }: Info) => {
      return {
        id,
        title,
        icon,
        hotkey,
        section,
        handler: () => {
          window.open(url, '_blank')
        },
      }
    })

    ninja.data = [
      {
        id: 'print',
        title: 'Print',
        hotkey: 'ctrl+P',
        icon: `<svg style="margin-right: 8px" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0 1 10.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0 .229 2.523a1.125 1.125 0 0 1-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0 0 21 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 0 0-1.913-.247M6.34 18H5.25A2.25 2.25 0 0 1 3 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 0 1 1.913-.247m10.5 0a48.536 48.536 0 0 0-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5Zm-3 0h.008v.008H15V10.5Z"></path>
              </svg>`,
        section: 'Projects',
        handler: () => {
          window.print()
        },
      },
      ...data,
      {
        id: 'Theme',
        title: 'Change theme...',
        hotkey: 'ctrl+X',
        icon: `
          <svg
            height="16"
            width="16"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            style="margin-right: 8px"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z" />
            <path d="M7 20h10" />
            <path d="M9 16v4" />
            <path d="M15 16v4" />
          </svg>
        `,
        children: ['Light Theme', 'Dark Theme', 'System Theme'],
        handler: () => {
          ninja.open({ parent: 'Theme' })
          return { keepOpen: true }
        },
      },
      {
        id: 'Light Theme',
        title: 'Change theme to Light',
        icon: `
          <svg
            height="16"
            width="16"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            style="margin-right: 8px"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            ><path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M14.828 14.828a4 4 0 1 0 -5.656 -5.656a4 4 0 0 0 5.656 5.656z" />
            <path d="M6.343 17.657l-1.414 1.414" /><path d="M6.343 6.343l-1.414 -1.414" />
            <path d="M17.657 6.343l1.414 -1.414" /><path d="M17.657 17.657l1.414 1.414" />
            <path d="M4 12h-2" /><path d="M12 4v-2" /><path d="M20 12h2" /><path d="M12 20v2" />
          </svg>
        `,
        parent: 'Theme',
        handler: () => {
          document.documentElement.classList.remove('dark')
          document.getElementById('ninjaKeys')?.classList.remove('dark')
          localStorage.setItem('theme', 'light')
        },
      },
      {
        id: 'Dark Theme',
        title: 'Change theme to Dark',
        icon: `
           <svg
            height="16"
            width="16"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            style="margin-right: 8px"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
          </svg>
        `,
        parent: 'Theme',
        handler: () => {
          document.documentElement.classList.add('dark')
          document.getElementById('ninjaKeys')?.classList.add('dark')
          localStorage.setItem('theme', 'dark')
        },
      },
    ]
  }
</script>

<style>
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    ,
    50% {
      opacity: 0;
    }
    ,
    100% {
      opacity: 1;
    }
  }

  footer {
    background-color: var(--primary-color);
    border-top: 1px solid var(--border-color);
    position: fixed;
    bottom: 0;
    width: 100%;
    padding-block: 0.5rem;
    text-align: center;
    font-size: 0.875rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;

    h5 {
      font-weight: 400;
    }

    kbd {
      background-color: var(--pills-bg);
      border-radius: 0.25rem;
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    #footer-button {
      background: var(--background-color);
      position: fixed;
      border: 1px solid var(--border-color);
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  @media (min-width: 601px) {
    #normal-footer {
      display: block;
    }

    #footer-button {
      display: none;
    }
  }

  @media print {
    ninja-keys {
      display: none;
    }
  }
</style>
